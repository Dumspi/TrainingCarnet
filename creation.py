import streamlit as st
import pandas as pd
from datetime import date

# ------------------- PARAM√àTRES FIXES -------------------

PHASES = [
    ("Pr√©pa 1", date(2025, 9, 1), date(2025, 12, 31), "PPG/Technique", "PPG/Technique"),
    ("Pr√©-comp√©tition janvier", date(2026, 1, 1), date(2026, 1, 31), "PPG/Technique", "Technique"),
    ("Comp√©tition f√©vrier", date(2026, 2, 1), date(2026, 2, 28), "Technique", "Technique"),
    ("Pr√©pa 2", date(2026, 3, 1), date(2026, 4, 15), "PPG/Technique", "PPG/Technique"),
    ("Pr√©-comp√©tition avril-mai", date(2026, 4, 16), date(2026, 5, 15), "PPG/Technique", "Technique"),
    ("Comp√©tition mai-juillet", date(2026, 5, 16), date(2026, 7, 15), "Technique", "Technique"),
    ("Repos ao√ªt", date(2026, 8, 1), date(2026, 8, 31), "Repos", "Repos"),
]

JOURS = ["Lundi", "Mardi", "Mercredi", "Jeudi", "Vendredi"]

# Exercices propos√©s
EXOS_MUSCU = ["√âpaul√©", "Arrach√©", "Soulev√© de terre", "Squat", "Pull over"]
EXOS_PREPA = ["M√©decine ball", "Passage de haies", "S√©rie de m√©decine ball JB", "Gainage"]
EXOS_TECH = ["Lancers de balles", "Courses d‚Äô√©lan", "Point technique pr√©cis", "Lancers de javelots"]

# Tests
TESTS_MAX_MUSCU = EXOS_MUSCU.copy()
TESTS_MAX_JAVELOT = [
    "Saut en longueur sans √©lan",
    "√âjection lancer de poids 4kg avant",
    "√âjection lancer de poids 4kg arri√®re",
    "Lancer m√©decine ball 4kg"
]
TEST_SAUT_HAUTEUR = "Saut en hauteur sans √©lan"

# ------------------- FONCTIONS -------------------

def get_phase(current_date):
    for phase, start, end, mardi, jeudi in PHASES:
        if start <= current_date <= end:
            return phase, mardi, jeudi
    return "Hors phase", "Repos", "Repos"


# ------------------- INTERFACE -------------------

st.title("üìò Carnet de suivi d'entra√Ænement - Javelot")

selected_date = st.date_input("üìÖ Choisis la date de la s√©ance :", date.today())
weekday = selected_date.weekday()

if weekday > 4:
    st.warning("Pas de s√©ance pr√©vue ce jour-l√† (week-end).")
    st.stop()

jour = JOURS[weekday]
phase, mardi_type, jeudi_type = get_phase(selected_date)

if jour == "Lundi":
    type_seance = "Muscu"
elif jour == "Mardi":
    type_seance = mardi_type
elif jour == "Mercredi":
    type_seance = "Gym/Muscu/Mobilit√©"
elif jour == "Jeudi":
    type_seance = jeudi_type
else:
    type_seance = "Muscu"

st.subheader(f"üìç {jour} ‚Äî {phase} ‚Äî {type_seance}")

# Onglets
tab_seance, tab_tests = st.tabs(["S√©ance", "Tests max"])

with tab_seance:
    with st.form("formulaire_seance"):

        # ------------------- EXERCICES R√âALIS√âS -------------------
        st.markdown("### üèãÔ∏è Exercices r√©alis√©s")

        def input_reps_for_exos(exos):
            exos_reps = []
            for exo in exos:
                reps = st.text_input(f"R√©p√©titions pour {exo} (ex: 3x10)", key=f"reps_{exo}")
                exos_reps.append(f"{exo} ({reps})" if reps else exo)
            return exos_reps

        exercices_selectionnes = []
        exercices_reps = []
        exercices_libres = ""

        if jour == "Lundi":
            exercices_selectionnes = st.multiselect("Exercices de musculation", EXOS_MUSCU)
            exercices_reps = input_reps_for_exos(exercices_selectionnes)

        elif jour in ["Mardi", "Jeudi"]:
            choix_type = st.radio("Type de s√©ance", ["Pr√©pa physique", "Technique", "Les deux"])

            options = []
            if choix_type in ["Pr√©pa physique", "Les deux"]:
                options += EXOS_PREPA
            if choix_type in ["Technique", "Les deux"]:
                options += EXOS_TECH

            exercices_selectionnes = st.multiselect("Exercices r√©alis√©s", options)
            exercices_reps = input_reps_for_exos(exercices_selectionnes)

        else:
            exercices_libres = st.text_area("Exercices r√©alis√©s (libre)")

        # Champ libre pour compl√©ter
        autres_exos = st.text_area("Autres exercices / pr√©cisions")

        # ------------------- INFOS PHYSIQUES -------------------
        st.markdown("### ü©ª Ressenti / r√©cup√©ration")

        douleur_type = st.radio("Douleur ressentie", ["Aucune", "Musculaire", "Articulaire"], index=0)
        douleur_zone = st.text_input("Zone de douleur (si applicable)", disabled=douleur_type == "Aucun_
